@model PMTool.Models.Task

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.Title)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Title)
    @Html.ValidationMessageFor(model => model.Title)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.StartDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.StartDate)
    @Html.ValidationMessageFor(model => model.StartDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.EndDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.EndDate)
    @Html.ValidationMessageFor(model => model.EndDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.TaskHour)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.TaskHour)
    @Html.ValidationMessageFor(model => model.TaskHour)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.IsLocked)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.IsLocked)
    @Html.ValidationMessageFor(model => model.IsLocked)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.IsActive)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.IsActive)
    @Html.ValidationMessageFor(model => model.IsActive)
</div>

@*<div class="editor-label">
    @Html.LabelFor(model => model.ParentTaskId)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ParentTaskId)
    @Html.ValidationMessageFor(model => model.ParentTaskId)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Attachments)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Attachments)
    @Html.ValidationMessageFor(model => model.Attachments)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CreatedBy)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.CreatedBy)
    @Html.ValidationMessageFor(model => model.CreatedBy)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ModifieddBy)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ModifieddBy)
    @Html.ValidationMessageFor(model => model.ModifieddBy)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CreateDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.CreateDate)
    @Html.ValidationMessageFor(model => model.CreateDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ModificationDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ModificationDate)
    @Html.ValidationMessageFor(model => model.ModificationDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ActionDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ActionDate)
    @Html.ValidationMessageFor(model => model.ActionDate)
</div>*@

<div class="editor-label">
    Project
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.ProjectID, ((IEnumerable<PMTool.Models.Project>)ViewBag.PossibleProjects).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Name), 
        Value = option.ProjectID.ToString(),
        Selected = (Model != null) && (option.ProjectID == Model.ProjectID)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.ProjectID)
</div>
<div class="editor-label">
    Priority
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.PriorityID, ((IEnumerable<PMTool.Models.Priority>)ViewBag.PossiblePriorities).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Name), 
        Value = option.PriorityID.ToString(),
        Selected = (Model != null) && (option.PriorityID == Model.PriorityID)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.PriorityID)
</div>
        <script type="text/javascript">
           
            jQuery(document).ready(function () {

                jQuery('.chosen').chosen();
            });
  </script>

<script type="text/javascript">
    jQuery(".chosen").chosen({ max_selected_options: 10 });
    jQuery(".chosen-deselect").chosen({ allow_single_deselect: true });
    jQuery(".chosen").chosen().change();
    jQuery(".chosen").trigger('liszt:updated');

    var selectedUserID = jQuery('Select#SelectedAssignedUsers').val();
    var SelectedAssignedUsers = "";

    if (selectedUserID != null) {
        jQuery.each(selectedUserID, function (index, value) {
            SelectedAssignedUsers = SelectedAssignedUsers + value + ",";
        });

        var UserArray = new Array();
        jQuery('Select#SelectedAssignedUsers').val(UserArray);

        jQuery('.chzn-select').trigger('chosen:updated');
    }

    var selectedFollowedUserID = jQuery('Select#SelectedAssignedUsers').val();
    var SelectedFollowedUsers = "";

    if (selectedFollowedUserID != null) {
        jQuery.each(selectedFollowedUserID, function (index, value) {
            SelectedFollowedUsers = SelectedFollowedUsers + value + ",";
        });

        var FollowedUserArray = new Array();
        jQuery('Select#SelectedFollowedUsers').val(FollowedUserArray);

        jQuery('.chzn-select').trigger('chosen:updated');
    }
</script>

<div class="editor-label">
    Assign User
</div>
<div class="editor-field">

    @Html.ListBoxFor(m => m.SelectedAssignedUsers, (IEnumerable<SelectListItem>)ViewBag.PossibleUsers,
            new { @class = "chosen", multiple = "multiple", style = "width: 350px;"})
</div> 

<div class="editor-label">
    Assign User
</div>
<div class="editor-field">

    @Html.ListBoxFor(m => m.SelectedFollowedUsers, (IEnumerable<SelectListItem>)ViewBag.PossibleUsers,
            new { @class = "chosen", multiple = "multiple", style = "width: 350px;"})
</div> 